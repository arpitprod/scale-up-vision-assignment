{"version":3,"sources":["components/RegisterFirst.js","appReducer.js","components/RegisterSecond.js","components/UserList.js","components/Dashboard.js","App.js","serviceWorker.js","rootReducer.js","store.js","index.js"],"names":["RegisterFirst","props","handleChangeForm","e","setState","target","name","value","goToNextPage","preventDefault","state","username","email","password","console","log","history","push","pathname","user","this","Row","Col","sm","Card","body","Form","onSubmit","FormGroup","Label","for","Input","type","id","onChange","Button","React","Component","initialState","usersList","RegisterSecond","addUser","location","firstName","lastName","usersListAction","readOnly","connect","data","payload","size","offset","color","onClick","Table","bordered","length","map","obj","i","key","scope","app","Dashboard","CardBody","CardTitle","CardSubtitle","CardText","createBrowserHistory","App","basename","process","exact","path","component","UserList","from","to","Boolean","window","hostname","match","combineReducers","action","store","createStore","rootReducer","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2bd54d22.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass RegisterFirst extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\thandleChangeForm = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\n\tgoToNextPage = (e) => {\n\t\te.preventDefault();\n\t\tconst { username, email, password } = this.state;\n\t\tconsole.log({ username, email, password });\n\t\tthis.props.history.push({\n\t\t\tpathname: '/register/2',\n\t\t\tuser: { username, email, password }\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { username, email, password } = this.state;\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t<Col sm=\"6\">\n\t\t\t\t\t<Card body>\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tonSubmit={this.goToNextPage}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"username\" name=\"username\" id=\"username\"\n\t\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChangeForm}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\" name=\"email\" id=\"email\"\n\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChangeForm}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\" name=\"password\" id=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChangeForm}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<Button>Next</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default RegisterFirst;\n","const initialState = {\n\tusersList: []\n};\n\n// Reducer\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'USERS_LIST':\n      return {\n        ...state,\n        usersList: [...state.usersList, action.payload.data]\n      };\n    default:\n      return state;\n  }\n};\n\n// // Actions\nexport const usersListAction = (data) => ({\n  type: 'USERS_LIST',\n  payload: {\n\t\tdata\n\t}\n});\n","// maria.j@scale-up.vision\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Card, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { usersListAction } from '../appReducer';\n\nclass RegisterSecond extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\tlastName: ''\n\t\t}\n\t}\n\n\thandleChangeForm = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\n\taddUser = (e) => {\n\t\te.preventDefault();\n\t\tconst { username, email, password } = this.props.location.user;\n\t\tconst { firstName, lastName } = this.state;\n\t\tconsole.log({ username, email, password, firstName, lastName });\n\t\tthis.props.usersListAction({ username, email, password, firstName, lastName });\n\t\tthis.props.history.push('/userlist');\n\t}\n\n\trender() {\n\t\tconsole.log(this.props);\n\t\tconst { username, email } = this.props.location.user;\n\t\tconst { firstName, lastName } = this.state;\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t<Col sm=\"6\">\n\t\t\t\t\t<Card body>\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tonSubmit={this.addUser}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"username\">Username</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"username\" name=\"username\" id=\"username\" readOnly\n\t\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"email\">Email</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"email\" name=\"email\" id=\"email\" readOnly\n\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t{/* <FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"password\">Password</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"password\" name=\"password\" id=\"password\" readOnly\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup> */}\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"firstName\">First Name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"firstName\" name=\"firstName\" id=\"firstName\"\n\t\t\t\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChangeForm}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"lastName\">Last Name</Label>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"lastName\" name=\"lastName\" id=\"lastName\"\n\t\t\t\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChangeForm}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<Button>Submit</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default connect(null, { usersListAction })(RegisterSecond);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Card, Table, Button } from 'reactstrap';\n\nclass RegisterFirst extends React.Component {\n\n\trender() {\n\t\tconst { usersList } = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm={{ size: 'auto', offset: 1 }}>\n\t\t\t\t\t\t<Button color=\"link\"\n\t\t\t\t\t\t\tonClick={() => this.props.history.push('/register/1')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={{ size: 'auto', offset: 1 }}>\n\t\t\t\t\t\t<Button color=\"link\"\n\t\t\t\t\t\t\tonClick={() => this.props.history.push('/dashboard')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t<Card body>\n\t\t\t\t\t\t\t<Table bordered>\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t\t\t\t\t<th>First Name</th>\n\t\t\t\t\t\t\t\t\t\t<th>Last Name</th>\n\t\t\t\t\t\t\t\t\t\t<th>Username</th>\n\t\t\t\t\t\t\t\t\t\t<th>Email</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{usersList.length > 0 && usersList.map((obj, i) => (\n\t\t\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{i+1}</th>\n\t\t\t\t\t\t\t\t\t\t\t<td>{obj.firstName}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{obj.lastName}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{obj.username}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{obj.email}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tusersList: state.app.usersList\n});\n\nexport default connect(mapStateToProps)(RegisterFirst);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Card, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\n\nclass Dashboard extends React.Component {\n\trender() {\n\t\tconst { usersList } = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm={{ size: 'auto', offset: 1 }}>\n\t\t\t\t\t\t<Button color=\"link\"\n\t\t\t\t\t\t\tonClick={() => this.props.history.push('/register/1')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={{ size: 'auto', offset: 1 }}>\n\t\t\t\t\t\t<Button color=\"link\"\n\t\t\t\t\t\t\tonClick={() => this.props.history.push('/userlist')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tUser Lists\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm={{ size: 'auto', offset: 4 }}>\n\t\t\t\t\t\t<Card body>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<CardTitle>Total Users</CardTitle>\n\t\t\t\t\t\t\t\t<CardSubtitle>All Registered Users</CardSubtitle>\n\t\t\t\t\t\t\t\t<CardText>\n\t\t\t\t\t\t\t\t\t{usersList.length}\n\t\t\t\t\t\t\t\t</CardText>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tusersList: state.app.usersList\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\n// Pages\nimport RegisterFirst from './components/RegisterFirst';\nimport RegisterSecond from './components/RegisterSecond';\nimport UserList from './components/UserList';\nimport Dashboard from './components/Dashboard';\n\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nclass App extends React.Component {\n\n  render() {\n    return (\n\t\t\t<Router history={history} basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/register/1\" component={RegisterFirst} />\n\t\t\t\t\t<Route exact path=\"/register/2\" component={RegisterSecond} />\n\t\t\t\t\t<Route exact path=\"/userlist\" component={UserList} />\n\t\t\t\t\t<Route exact path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t\t<Redirect exact from=\"/\" to=\"/register/1\" />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport app from './appReducer';\n\nexport default combineReducers({ app });\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}